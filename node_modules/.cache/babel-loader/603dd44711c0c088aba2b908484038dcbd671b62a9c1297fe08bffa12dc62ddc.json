{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KOUSTAV PAUL\\\\Desktop\\\\Koustav\\\\1. Thrift\\\\1. Thrift_Auto EM\\\\Power_Dashboard_Stylish\\\\src\\\\pages\\\\DetailsPage.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { BarChart, Bar, LineChart, Line, PieChart, Pie, Cell, Tooltip, Legend, XAxis, YAxis, CartesianGrid } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DetailsPage = () => {\n  _s();\n  const {\n    graphId\n  } = useParams();\n  const location = useLocation();\n  const {\n    graphData\n  } = location.state || {};\n  if (!graphData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No data available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }, this);\n  }\n  const {\n    data,\n    type\n  } = graphData;\n  const renderGraph = () => {\n    switch (type) {\n      case 'bar':\n        return /*#__PURE__*/_jsxDEV(BarChart, {\n          width: 600,\n          height: 400,\n          data: data,\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            dataKey: \"voltage\",\n            fill: \"#8884d8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            dataKey: \"current\",\n            fill: \"#82ca9d\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this);\n      case 'line':\n        return /*#__PURE__*/_jsxDEV(LineChart, {\n          width: 600,\n          height: 400,\n          data: data,\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"voltage\",\n            stroke: \"#8884d8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this);\n      case 'pie':\n        return /*#__PURE__*/_jsxDEV(PieChart, {\n          width: 600,\n          height: 400,\n          children: [/*#__PURE__*/_jsxDEV(Pie, {\n            data: data,\n            dataKey: \"current\",\n            nameKey: \"name\",\n            cx: \"50%\",\n            cy: \"50%\",\n            outerRadius: 150,\n            children: data.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n              fill: ['#8884d8', '#82ca9d', '#ffc658'][index % 3]\n            }, `cell-${index}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"No chart available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Details for \", graphId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), renderGraph(), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"This is where you can show detailed information about the selected graph.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(DetailsPage, \"V2/pXdGte7Bb72LRG8/ZQk06evU=\", false, function () {\n  return [useParams, useLocation];\n});\n_c = DetailsPage;\nexport default DetailsPage;\nvar _c;\n$RefreshReg$(_c, \"DetailsPage\");","map":{"version":3,"names":["React","useLocation","useParams","BarChart","Bar","LineChart","Line","PieChart","Pie","Cell","Tooltip","Legend","XAxis","YAxis","CartesianGrid","jsxDEV","_jsxDEV","DetailsPage","_s","graphId","location","graphData","state","children","fileName","_jsxFileName","lineNumber","columnNumber","data","type","renderGraph","width","height","strokeDasharray","dataKey","fill","stroke","nameKey","cx","cy","outerRadius","map","entry","index","style","padding","_c","$RefreshReg$"],"sources":["C:/Users/KOUSTAV PAUL/Desktop/Koustav/1. Thrift/1. Thrift_Auto EM/Power_Dashboard_Stylish/src/pages/DetailsPage.jsx"],"sourcesContent":["import React from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { BarChart, Bar, LineChart, Line, PieChart, Pie, Cell, Tooltip, Legend, XAxis, YAxis, CartesianGrid } from 'recharts';\n\nconst DetailsPage = () => {\n  const { graphId } = useParams();\n  const location = useLocation();\n  const { graphData } = location.state || {};\n\n  if (!graphData) {\n    return <div>No data available</div>;\n  }\n\n  const { data, type } = graphData;\n\n  const renderGraph = () => {\n    switch (type) {\n      case 'bar':\n        return (\n          <BarChart width={600} height={400} data={data}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"name\" />\n            <YAxis />\n            <Tooltip />\n            <Legend />\n            <Bar dataKey=\"voltage\" fill=\"#8884d8\" />\n            <Bar dataKey=\"current\" fill=\"#82ca9d\" />\n          </BarChart>\n        );\n      case 'line':\n        return (\n          <LineChart width={600} height={400} data={data}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"name\" />\n            <YAxis />\n            <Tooltip />\n            <Legend />\n            <Line type=\"monotone\" dataKey=\"voltage\" stroke=\"#8884d8\" />\n          </LineChart>\n        );\n      case 'pie':\n        return (\n          <PieChart width={600} height={400}>\n            <Pie data={data} dataKey=\"current\" nameKey=\"name\" cx=\"50%\" cy=\"50%\" outerRadius={150}>\n              {data.map((entry, index) => (\n                <Cell key={`cell-${index}`} fill={['#8884d8', '#82ca9d', '#ffc658'][index % 3]} />\n              ))}\n            </Pie>\n            <Tooltip />\n            <Legend />\n          </PieChart>\n        );\n      default:\n        return <div>No chart available</div>;\n    }\n  };\n\n  return (\n    <div style={{ padding: '20px' }}>\n      <h2>Details for {graphId}</h2>\n      {renderGraph()}\n      <p>This is where you can show detailed information about the selected graph.</p>\n    </div>\n  );\n};\n\nexport default DetailsPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}